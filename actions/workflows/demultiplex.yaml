
# Demultiplexing
# ==============
# Setups up a runfolder for demultiplexing assuming that the samplesheet
# needs to be copied from `samplesheet_location` into the runfolder.
# Then starts bcl2fastq and waits until it's done.
#

version: "2.0" # mistral version

arteria-packs.demultiplex:

    type: direct
    input:
        - host
        - bcl2fastq_service_port
        - runfolder_name
        - bcl2fastq_version
        - barcode_mismatches
        - tiles
        - use_base_mask
        - bcl2fastq_additional_arguments
        - send_mail_to
    output:
        test: <% $ %>
  #  task-defaults:
  #      on-error:
  #          - oh_shit_error_demultiplex
          #  - fail

    tasks:
        get_config:
            action: arteria-packs.get_pack_config
            publish:
                hermes_base_url: <% $.get_config.result.hermes_base_url %>
                hermes_user: <% $.get_config.result.hermes_user %>
                hermes_token: <% $.get_config.result.hermes_token %>
            on-success:
                - get_flowcell_name

        get_flowcell_name:
            action: arteria-packs.get_flowcell_from_runfolder_name
            input:
                runfolder_name: <% $.runfolder_name %>
            publish:
                flowcell_name: <% $.get_flowcell_name.result %>
            on-success:
                - download_samplesheet

        download_samplesheet:
            action: core.http
            input:
                url: <% $.hermes_base_url %>/<% $.flowcell_name %>/samplesheetfile
                headers: USER=<% $.hermes_user %>&X-XSRF-TOKEN=<% $.hermes_token %>
            publish:
                samplesheet_string: <% $.download_samplesheet.body.samplesheet %>
            on-success:
                - construct_bcl2fastq_body

        # Since we don't want to pass empty values into
        # bcl2fastq-ws, we remove any empty keys from
        # this body.
        construct_bcl2fastq_body:
            action: arteria-packs.parse_bcl2fastq_args
            input:
                samplesheet: "<% $.samplesheet_string %>"
                bcl2fastq_version: "<% $.bcl2fastq_version %>"
                barcode_mismatches: "<% $.barcode_mismatches %>"
                tiles: "<% $.tiles %>"
                use_base_mask: "<% $.use_base_mask %>"
                additional_arguments: "<% $.bcl2fastq_additional_arguments %>"
            publish:
                bcl2fastq_body: <% $.construct_bcl2fastq_body.stdout %>
            on-success:
                - run_bcl2fastq

        run_bcl2fastq:
            action: core.http
            input:
                url: "http://<% $.host %>:<% $.bcl2fastq_service_port %>/api/1.0/start/<% $.runfolder_name %>"
                method: "POST"
                headers: "Content-Type=application/json"
                body: <% $.bcl2fastq_body %>
            publish:
                bcl2fastq_status_code: <% $.run_bcl2fastq.status_code %>
                bcl2fastq_status_url: <% $.run_bcl2fastq.body.link %>
            on-success:
                - poll_status

        poll_status:
            action: arteria-packs.poll_status
            input:
                url: <% $.bcl2fastq_status_url %>
            publish:
                poll_out: <% $.poll_status.stdout %>
                poll_err: <% $.poll_status.stderr %>

        oh_shit_error_demultiplex:
            action: core.sendmail
            input:
                to: <% $.send_mail_to %>
                subject: "'[ARTERIA] - OH SHIT ERROR DEMULTIPLEX occurred for runfolder <% $.runfolder_name %>'"
                body: "An oh shit error occurred on <% $.runfolder_name %> on <% $.host %> in demultiplex flow. Please investigate!"
            on-complete:
              - fail

        #send_error:
          #action: arteria-packs.send_error
          #input:
          #    context: <% $. %>
          #on-error:
#              - fail

        #shit_error:
        #  action: arteria-packs.oh_shit_error execution_id=<% $.__execution.id %> host=<% $.host %> runfolder=<% $#.runfolder %>
