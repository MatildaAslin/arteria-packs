version: "2.0" # mistral version
name: arteria-packs.sisyphus_qc
description: Workflow to run a Sisyphus quality control

workflows:

    main:
        type: direct
        input:
            - host
            - runfolder_name
            - siswrap_service_port
        output:
            std_out: <% $.std_out %>
            #output_the_whole_workflow_context: <% $ %>
        tasks:
            run_qc:
                action: core.http
                input:
                    url: "http://<% $.host %>:<% $.siswrap_service_port %>/api/1.0/qc/run/<% $.runfolder_name %>"
                    method: "POST"
                    headers: "Content-Type=application/json"
                    body: '{"runfolder": "<% $.runfolder_name %>"}'
                publish:
                    qc_code: "<% $.run_qc.status_code %>"
                    qc_msg: "<% $.run_qc.body.msg %>"
                    qc_status_url: "<% $.run_qc.body.link %>"
                    qc_err: "<% $.run_quickreport.status_code %> <% $.run_quickreport.body %>"
                on-success:
                    - poll_status
                on-error:
                    - print_error

            poll_status:
                action: arteria-packs.poll_status
                input:
                    url: <% $.qc_status_url %>
                #publish:
                    #poll_out: <% $.poll_status.stdout %>
                    #poll_err: <% $.poll_status.stderr %>
                    #qc_err: <% $.poll_status.stdout %> <% $.poll_status.stderr %>
                on-success:
                    - notify
                on-error:
                    - print_error

            print_error:
                action: core.local
                input:
                    cmd: "printf 'an error occurred: <% $.qc_err %>'"

            notify:
                action: core.local
                input:
                    cmd: "printf '<% $.poll_out %>'"
