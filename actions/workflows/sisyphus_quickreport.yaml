version: "2.0" # mistral version
name: arteria-packs.sisyphus_quickreport
description: Workflow to generate a Sisyphus quick report

workflows:

    main:
        type: direct
        # fixme: get port nr from somewhere?
        input:
            - host
            - runfolder_name
        output:
#            std_out: <% $.std_out %>
            output_the_whole_workflow_context: <% $ %>
        tasks:
            run_quickreport:
                action: core.http
                input:
                    url: "http://<% $.host %>:10900/api/1.0/report/run/<% $.runfolder_name %>"
                    method: "POST"
                    headers: "Content-Type=application/json"
                    body: '{"runfolder": "<% $.runfolder_name %>"}'
                publish:
                    report_code: <% $.run_quickreport.status_code %>
                    report_msg: <% $.run_quickreport.body %>
                    report_status_url: <% $.run_quickreport.body.link %>
                    report_err: <% $.run_quickreport.status_code %> <% $.run_quickreport.body %>
                on-success:
                    - poll_status
                on-error:
                    - print_error

            poll_status:
                action: arteria-packs.poll_status
                input:
                    url: <% $.report_status_url %>
                publish:
                    poll_out: <% $.poll_status.stdout %>
                    poll_err: <% $.poll_status.stderr %>
                    report_err: <% $.poll_status.stdout %> <% $.poll_status.stderr %>
                on-success:
                    - notify
                on-error:
                    - print_error

            print_error:
                action: core.local
                input:
                    cmd: "printf 'An error occurred: <% $.report_err %>'"

            notify:
                action: core.local
                input:
                    cmd: "printf '<% $.poll_out %>'"
